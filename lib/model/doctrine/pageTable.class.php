<?php

/**
 * pageTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class pageTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object pageTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('page');
    }
    
    public static function getMainPage(){
      return Doctrine_Query::create()
              ->from('page')
              ->andWhere('parent_id = ?', 1)
              ->orderBy('position ASC')
              ->execute();
    }
    
    public static function getMenuHeader(){
      return Doctrine_Query::create()
              ->from('page')
              ->andWhere('parent_id = ?', 1)
              ->andWhere('not_in_menu = ?', 0)
              ->andWhere('hidden = ?', 0)
              ->orderBy('position ASC')
              ->execute();
    }
    
    public static function getFirstPage(){
      return Doctrine_Query::create()
              ->from('page')
              ->andWhere('parent_id = ?', 1)
              ->andWhere('hidden = ?', 0)
              ->orderBy('position ASC')
              ->execute()->getFirst();
    }
    
    public static function getSubPage($page){
      return Doctrine_Query::create()
              ->from('page')
              ->andWhere('parent_id = ?', $page->getId())
              ->andWhere('hidden = ?', 0)
              ->orderBy('position ASC')
              ->execute();
    }
    
    public static function getPageByRouteHash($route){
      return Doctrine_Query::create()
              ->from('page')
              ->where('hidden = ?', 0)
              ->andWhere('route_hash = ?', $route)
              ->execute()->getFirst();
    }
    
    public static function getPageToDynamicFooter($limit){
        $count = self::getInstance()->findAll()->count();
        
        return Doctrine_Query::create()
                ->from('page')
                ->where('hidden = ?', 0)
                ->andWhere('id > 2')
                ->offset(rand(0, $count-$limit))
                ->limit($limit)
                ->execute();
    }
}